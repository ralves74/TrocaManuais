#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrocaManuais.Web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Trocamanuais")]
	public partial class EstabDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertestabelecimento(estabelecimento instance);
    partial void Updateestabelecimento(estabelecimento instance);
    partial void Deleteestabelecimento(estabelecimento instance);
    partial void InsertAgrupamento(Agrupamento instance);
    partial void UpdateAgrupamento(Agrupamento instance);
    partial void DeleteAgrupamento(Agrupamento instance);
    #endregion
		
		public EstabDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TrocamanuaisConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EstabDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EstabDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EstabDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EstabDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<estabelecimento> estabelecimentos
		{
			get
			{
				return this.GetTable<estabelecimento>();
			}
		}
		
		public System.Data.Linq.Table<Agrupamento> Agrupamentos
		{
			get
			{
				return this.GetTable<Agrupamento>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estabelecimentos")]
	public partial class estabelecimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idestab;
		
		private string _design;
		
		private string _morada;
		
		private string _local;
		
		private string _telefone;
		
		private string _fax;
		
		private string _email;
		
		private string _url;
		
		private System.Nullable<int> _CodAgrupamento;
		
		private System.Nullable<bool> _Sede;
		
		private System.Nullable<int> _cp4;
		
		private System.Nullable<int> _cp3;
		
		private EntityRef<Agrupamento> _Agrupamento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidestabChanging(int value);
    partial void OnidestabChanged();
    partial void OndesignChanging(string value);
    partial void OndesignChanged();
    partial void OnmoradaChanging(string value);
    partial void OnmoradaChanged();
    partial void OnlocalChanging(string value);
    partial void OnlocalChanged();
    partial void OntelefoneChanging(string value);
    partial void OntelefoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnCodAgrupamentoChanging(System.Nullable<int> value);
    partial void OnCodAgrupamentoChanged();
    partial void OnSedeChanging(System.Nullable<bool> value);
    partial void OnSedeChanged();
    partial void Oncp4Changing(System.Nullable<int> value);
    partial void Oncp4Changed();
    partial void Oncp3Changing(System.Nullable<int> value);
    partial void Oncp3Changed();
    #endregion
		
		public estabelecimento()
		{
			this._Agrupamento = default(EntityRef<Agrupamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idestab", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idestab
		{
			get
			{
				return this._idestab;
			}
			set
			{
				if ((this._idestab != value))
				{
					this.OnidestabChanging(value);
					this.SendPropertyChanging();
					this._idestab = value;
					this.SendPropertyChanged("idestab");
					this.OnidestabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_design", DbType="NVarChar(100)")]
		public string design
		{
			get
			{
				return this._design;
			}
			set
			{
				if ((this._design != value))
				{
					this.OndesignChanging(value);
					this.SendPropertyChanging();
					this._design = value;
					this.SendPropertyChanged("design");
					this.OndesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_morada", DbType="NVarChar(60)")]
		public string morada
		{
			get
			{
				return this._morada;
			}
			set
			{
				if ((this._morada != value))
				{
					this.OnmoradaChanging(value);
					this.SendPropertyChanging();
					this._morada = value;
					this.SendPropertyChanged("morada");
					this.OnmoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_local", DbType="NVarChar(60)")]
		public string local
		{
			get
			{
				return this._local;
			}
			set
			{
				if ((this._local != value))
				{
					this.OnlocalChanging(value);
					this.SendPropertyChanging();
					this._local = value;
					this.SendPropertyChanged("local");
					this.OnlocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone", DbType="NVarChar(20)")]
		public string telefone
		{
			get
			{
				return this._telefone;
			}
			set
			{
				if ((this._telefone != value))
				{
					this.OntelefoneChanging(value);
					this.SendPropertyChanging();
					this._telefone = value;
					this.SendPropertyChanged("telefone");
					this.OntelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(20)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(100)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodAgrupamento", DbType="Int")]
		public System.Nullable<int> CodAgrupamento
		{
			get
			{
				return this._CodAgrupamento;
			}
			set
			{
				if ((this._CodAgrupamento != value))
				{
					if (this._Agrupamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodAgrupamentoChanging(value);
					this.SendPropertyChanging();
					this._CodAgrupamento = value;
					this.SendPropertyChanged("CodAgrupamento");
					this.OnCodAgrupamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sede", DbType="Bit")]
		public System.Nullable<bool> Sede
		{
			get
			{
				return this._Sede;
			}
			set
			{
				if ((this._Sede != value))
				{
					this.OnSedeChanging(value);
					this.SendPropertyChanging();
					this._Sede = value;
					this.SendPropertyChanged("Sede");
					this.OnSedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp4", DbType="Int")]
		public System.Nullable<int> cp4
		{
			get
			{
				return this._cp4;
			}
			set
			{
				if ((this._cp4 != value))
				{
					this.Oncp4Changing(value);
					this.SendPropertyChanging();
					this._cp4 = value;
					this.SendPropertyChanged("cp4");
					this.Oncp4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cp3", DbType="Int")]
		public System.Nullable<int> cp3
		{
			get
			{
				return this._cp3;
			}
			set
			{
				if ((this._cp3 != value))
				{
					this.Oncp3Changing(value);
					this.SendPropertyChanging();
					this._cp3 = value;
					this.SendPropertyChanged("cp3");
					this.Oncp3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agrupamento_estabelecimento", Storage="_Agrupamento", ThisKey="CodAgrupamento", OtherKey="Codagrupamento", IsForeignKey=true)]
		public Agrupamento Agrupamento
		{
			get
			{
				return this._Agrupamento.Entity;
			}
			set
			{
				Agrupamento previousValue = this._Agrupamento.Entity;
				if (((previousValue != value) 
							|| (this._Agrupamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agrupamento.Entity = null;
						previousValue.estabelecimentos.Remove(this);
					}
					this._Agrupamento.Entity = value;
					if ((value != null))
					{
						value.estabelecimentos.Add(this);
						this._CodAgrupamento = value.Codagrupamento;
					}
					else
					{
						this._CodAgrupamento = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agrupamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agrupamentos")]
	public partial class Agrupamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Codagrupamento;
		
		private string _agrupamento1;
		
		private EntitySet<estabelecimento> _estabelecimentos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodagrupamentoChanging(int value);
    partial void OnCodagrupamentoChanged();
    partial void Onagrupamento1Changing(string value);
    partial void Onagrupamento1Changed();
    #endregion
		
		public Agrupamento()
		{
			this._estabelecimentos = new EntitySet<estabelecimento>(new Action<estabelecimento>(this.attach_estabelecimentos), new Action<estabelecimento>(this.detach_estabelecimentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codagrupamento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Codagrupamento
		{
			get
			{
				return this._Codagrupamento;
			}
			set
			{
				if ((this._Codagrupamento != value))
				{
					this.OnCodagrupamentoChanging(value);
					this.SendPropertyChanging();
					this._Codagrupamento = value;
					this.SendPropertyChanged("Codagrupamento");
					this.OnCodagrupamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="agrupamento", Storage="_agrupamento1", DbType="NVarChar(60)")]
		public string agrupamento1
		{
			get
			{
				return this._agrupamento1;
			}
			set
			{
				if ((this._agrupamento1 != value))
				{
					this.Onagrupamento1Changing(value);
					this.SendPropertyChanging();
					this._agrupamento1 = value;
					this.SendPropertyChanged("agrupamento1");
					this.Onagrupamento1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agrupamento_estabelecimento", Storage="_estabelecimentos", ThisKey="Codagrupamento", OtherKey="CodAgrupamento")]
		public EntitySet<estabelecimento> estabelecimentos
		{
			get
			{
				return this._estabelecimentos;
			}
			set
			{
				this._estabelecimentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_estabelecimentos(estabelecimento entity)
		{
			this.SendPropertyChanging();
			entity.Agrupamento = this;
		}
		
		private void detach_estabelecimentos(estabelecimento entity)
		{
			this.SendPropertyChanging();
			entity.Agrupamento = null;
		}
	}
}
#pragma warning restore 1591
